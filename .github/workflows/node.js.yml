# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    strategy:
      matrix:
        node-version: [16.x, 20.9.0]
        os: [ ubuntu-latest ]
        #os: [ ubuntu-latest, windows-latest, macos-latest ] service only on ubuntu :(

    runs-on: ${{ matrix.os }}

    services:
     # Label used to access the service container
     postgres:
       # Docker Hub image
       image: postgres
       # Provide the password for postgres
       env:
         POSTGRES_PASSWORD: postgres
         POSTGRES_USER: runner
       # Set health checks to wait until postgres has started
       options: >-
         --health-cmd pg_isready
         --health-interval 10s
         --health-timeout 5s
         --health-retries 5

    env:
      JWT_SECRET: "@@TEST_SECRET$$"
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      DATABASE: "postgresql://user:password@localhost:5432/improved?schema=improved_schema"

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: sudo -i -u postgres
      - name: Setup programs
        run: sudo apt install -y postgresql postgresql-contrib
      - run: sudo systemctl start postgresql.service
      - name: Create database
        run: psql -U postgres -tc "SELECT 'CREATE DATABASE improved' WHERE NOT EXISTS (SELECT FROM 'schema.sql' WHERE datname = 'improved')"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  fmt:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.9.0]
    
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run fmt-check
#npm can be used with package.json file to install all needed dependencies

